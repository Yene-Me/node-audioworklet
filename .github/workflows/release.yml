name: Build/release

on:
  release:
    types: published

jobs:
  prebuild-lib:
    name: Prebuild lib

    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os:
        - ubuntu-latest
        - macos-latest
        - windows-latest

    steps:
      - name: Check out Git repository
        uses: actions/checkout@v1

      - name: Init submodules
        run: |
          git submodule update --init --recursive
          git clone https://github.com/djg/cubeb-pulse-rs.git vendor/cubeb/src/cubeb-pulse-rs
          git clone https://github.com/ChunMinChang/cubeb-coreaudio-rs vendor/cubeb/src/cubeb-coreaudio-rs
          cd vendor/cubeb
          git apply ../cmake_rust.patch

      - uses: hecrj/setup-rust-action@v1
      - name: Install Node.js, NPM and Yarn
        uses: actions/setup-node@v1
        with:
          node-version: 12

      - name: Install Alsa lib
        if: "runner.os == 'Linux'"
        run: sudo apt-get update && sudo apt-get install -y libasound2-dev libpulse-dev

      - name: Install deps
        shell: bash
        if: "runner.os != 'Windows'"
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: yarn

      - name: Install deps (Windows)
        if: "runner.os == 'Windows'"
        shell: powershell
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          Remove-Item Env:\NPM_CONFIG_CACHE
          Remove-Item Env:\NPM_CONFIG_PREFIX
          yarn

      - name: Build
        if: "runner.os != 'Windows'"
        run: yarn build-and-upload

      - name: Build (Windows)
        if: "runner.os == 'Windows'"
        shell: powershell
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          Remove-Item Env:\NPM_CONFIG_CACHE
          Remove-Item Env:\NPM_CONFIG_PREFIX
          yarn build-and-upload

  prebuild-lib-armv7:
    name: Prebuild lib ARMv7
    runs-on: ubuntu-latest
    steps:
    - name: Check out Git repository
      uses: actions/checkout@v1

    - name: Init submodules
      run: |
        git submodule update --init --recursive
        git clone https://github.com/djg/cubeb-pulse-rs.git vendor/cubeb/src/cubeb-pulse-rs
        git clone https://github.com/ChunMinChang/cubeb-coreaudio-rs vendor/cubeb/src/cubeb-coreaudio-rs
        cd vendor/cubeb
        git apply ../cmake_rust.patch

    - name: Build for armv7
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      run: ./scripts/build_for_arch.sh

  # prebuild-lib-arm64v8:
  #   name: Prebuild lib arm64v8
  #   runs-on: ubuntu-latest
  #   steps:
  #   - name: Check out Git repository
  #     uses: actions/checkout@v1

  #   - name: Init submodules
  #     run: |
  #       git submodule update --init --recursive
  #       git clone https://github.com/djg/cubeb-pulse-rs.git vendor/cubeb/src/cubeb-pulse-rs
  #       git clone https://github.com/ChunMinChang/cubeb-coreaudio-rs vendor/cubeb/src/cubeb-coreaudio-rs
  #       cd vendor/cubeb
  #       git apply ../cmake_rust.patch

  #   - name: Build for arm64v8
  #     env:
  #       GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
  #       CROSS_ENV: arm64v8
  #     run: ./scripts/build_for_arch.sh

